---
## check host list:
## if not host-key-check --> []
## if para auto add --> remove all para-ssh hosts
## if not para auto add --> put all para-ssh hosts into result list
## if ssh >= 7.6, remove all ssh hosts, use ssh_args
## if ssh < 7.6, check key first, if not key, put into result list

- name: save context
  register: current_play_context_known_hosts
  current_play_context_known_hosts:

- name: debug
  delegate_to: localhost

  vars:
  - inv_host: "{{ current_play_context_known_hosts.remote_addr }}"
  - inv_port: "{{ current_play_context_known_hosts.port | d(22, True) }}"
  - inv_port_is_22: "{{ inv_port | int == 22 }}"
  - inv_conn_is_ssh: "{{ ([ current_play_context_known_hosts.connection ]) | intersect(['ssh', 'paramiko']) }}"
  - inv_conn_is_native_ssh: "{{ current_play_context_known_hosts.connection == 'ssh' }}"
  - inv_conn_native_ssh_host_key_cheking: >-
      {{ inv_conn_is_native_ssh and ansible_host_key_checking
         | d(ansible_ssh_host_key_checking)
         | d(lookup('config', 'HOST_KEY_CHECKING')) }}
  - inv_conn_paramiko_ssh_host_key_cheking: >-
      {{ not inv_conn_is_native_ssh and ansible_host_key_checking
             | d(ansible_ssh_host_key_checking)
             | d(ansible_paramiko_host_key_checking)
             | d(lookup('config', 'HOST_KEY_CHECKING')) }}

  block:
  - debug:
      msg: "inv_conn_is_ssh={{ inv_conn_is_ssh }}"
  - debug:
      msg: "inv_conn_native_ssh_host_key_cheking={{ inv_conn_native_ssh_host_key_cheking }}"
  - debug:
      msg: "inv_conn_paramiko_ssh_host_key_cheking={{ inv_conn_paramiko_ssh_host_key_cheking }}"
  - debug:
      msg: "inv_conn_is_native_ssh={{ inv_conn_is_native_ssh }}"
  - debug:
      msg: "conf={{ lookup('config', 'PARAMIKO_HOST_KEY_AUTO_ADD') }}"

- name: all tasks run locally for necessary hosts
  delegate_to: localhost

  vars:
  - ansible_become: False
  - ansible_become_user: "{{ lookup('id', 'uname') }}"
  - inv_host: "{{ current_play_context_known_hosts.remote_addr }}"
  - inv_port: "{{ current_play_context_known_hosts.port | d(22, True) }}"
  - inv_port_is_22: "{{ inv_port | int == 22 }}"
  - inv_conn_is_ssh: "{{ ([ current_play_context_known_hosts.connection ]) | intersect(['ssh', 'paramiko']) }}"
  - inv_conn_is_native_ssh: "{{ current_play_context_known_hosts.connection == 'ssh' }}"
  - inv_conn_native_ssh_host_key_cheking: >-
      {{ inv_conn_is_native_ssh and ansible_host_key_checking
         | d(ansible_ssh_host_key_checking)
         | d(lookup('config', 'HOST_KEY_CHECKING')) }}
  - inv_conn_paramiko_ssh_host_key_cheking: >-
      {{ not inv_conn_is_native_ssh and ansible_host_key_checking
             | d(ansible_ssh_host_key_checking)
             | d(ansible_paramiko_host_key_checking)
             | d(lookup('config', 'HOST_KEY_CHECKING')) }}

  when:
  - inv_conn_is_ssh | bool
  - inv_conn_native_ssh_host_key_cheking or inv_conn_paramiko_ssh_host_key_cheking
  - inv_conn_is_native_ssh or not lookup('config', 'PARAMIKO_HOST_KEY_AUTO_ADD')

  block:
  - debug:
      msg: "inv_conn_is_ssh={{ inv_conn_is_ssh }}"
  - debug:
      msg: "inv_conn_native_ssh_host_key_cheking={{ inv_conn_native_ssh_host_key_cheking }}"
  - debug:
      msg: "inv_conn_paramiko_ssh_host_key_cheking={{ inv_conn_paramiko_ssh_host_key_cheking }}"
  - debug:
      msg: "inv_conn_is_native_ssh={{ inv_conn_is_native_ssh }}"
  - debug:
      msg: "conf={{ lookup('config', 'PARAMIKO_HOST_KEY_AUTO_ADD') }}"

  - name: check openssh support for accept-new option
    when: inv_conn_is_native_ssh | bool
    set_fact:
      ssh_support_accept_new_hostkey: >-
        {{ lookup('pipe', (current_play_context_known_hosts.ssh_executable | quote)
                          + ' -oStrictHostKeyChecking=accept-new -V || echo FAIL')
           is not search('FAIL')  }}

  - name: use accept-new option for openssh >= 7.6
    vars:
      original_ansible_ssh_common_args: "{ ansible_ssh_common_args | d(lookup('config', 'ANSIBLE_SSH_COMMON_ARGS')) }"
    when:
    - ssh_support_accept_new_hostkey | d
    set_fact:
      ansible_ssh_common_args: "-o StrictHostKeyChecking=accept-new {{ original_ansible_ssh_common_args }}"

  - name: search ssh fingerprints
    register: local_keygen
    when:
    - not (ssh_support_accept_new_hostkey | d)
    - not local_keygen | d or not local_keygen.rc # if found, break the loop
    loop: "{{ [ '~/.ssh/known_hosts' | expanduser, '/etc/ssh/ssh_known_hosts' ] | select('exists') | list }}"
    raw: >-
      ssh-keygen
      -F {{ [ inv_port_is_22 | ternary('', '['),
              inv_host,
              inv_port_is_22 | ternary('', ']:'),
              inv_port_is_22 | ternary('', inv_port)
            ] | join('') | quote }} \
      -f {{ item | quote }}
    failed_when: local_keygen.stderr
    changed_when: False

  - name: collect hosts for ssh-keyscan
    when:
    - not local_keygen.results
          | d([])
          | reject('skipped')
          | map(attribute='rc')
          | select('defined')
          | difference([1])
    set_fact:
      ssh_keyscan_args:
        h: "{{ inv_host }}"
        p: "{{ inv_port }}"

  - name: fetch remote ssh fingerprints
    run_once: True
    shell: ssh-keyscan -H -f - -p {{ item.0 | quote }} >> {{ '~/.ssh/known_hosts' | expanduser | quote }}
    args:
      stdin: "{{ item.1 | map(attribute='h') | union([]) | join('\n') }}" # unique filter will trigger a warning in ansible-lint
    loop: "{{ ansible_play_batch | map('extract', hostvars, 'ssh_keyscan_args') | select('defined') | groupby('p') }}"
    loop_control:
      label: "hosts with port {{ item.0 }}"

- name: user known_hosts mode is 0600
  delegate_to: localhost
  run_once: True
  when:
  - inventory_hostname == ansible_play_hosts[0]
  - ('~/.ssh/known_hosts') | expanduser is exists
  - groups.all
    | map('extract', hostvars, ['current_play_context_known_hosts', 'connection'])
    | intersect(['ssh', 'paramiko'])
  file:
    path: "{{ '~/.ssh/known_hosts' | expanduser }}"
    owner: "{{ lookup('id', 'euname') }}"
    mode: 'u=rw,g=,o='
