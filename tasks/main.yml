---
## check host list:
## if not host-key-check --> []
## if para auto add --> remove all para-ssh hosts
## if not para auto add --> put all para-ssh hosts into result list
## if ssh >= 7.6, remove all ssh hosts, use ssh_args
## if ssh < 7.6, check key first, if not key, put into result list
- name: all works run locally
  delegate_to: localhost
  when: lookup('config', 'HOST_KEY_CHECKING')
  vars:
  - ansible_become: False
  - ansible_become_user: "{{ lookup('id', 'uname') }}"
  - inv_host: >-
      {{ hostvars[inventory_hostname].ansible_ssh_host | d(hostvars[inventory_hostname].ansible_host, True)
         | d(inventory_hostname, True) }}
  - inv_port: >-
      {{ hostvars[inventory_hostname].ansible_ssh_port
         | d(hostvars[inventory_hostname].ansible_port)
         | d(ansible_ssh_port)
         | d(ansible_port)
         | d(22) }}
  - inv_port_is_22: "{{ inv_port | int == 22 }}"
  - inv_conn_is_ssh: >-
      {{ ([ hostvars[inventory_hostname].ansible_connection
            | d('smart') ])
         | intersect(['ssh', 'smart', 'paramiko', 'persistent']) }}

  block:
  - name: search ssh fingerprints
    register: local_keygen
    when:
    - inv_conn_is_ssh
    - not local_keygen | d or not local_keygen.rc # if found, break the loop
    with_items: "{{ [ '~/.ssh/known_hosts' | expanduser, '/etc/ssh/ssh_known_hosts' ] | select('exists') | list }}"
    raw: >-
      ssh-keygen
      -F {{ [ inv_port_is_22 | ternary('', '['),
              inv_host,
              inv_port_is_22 | ternary('', ']:'),
              inv_port_is_22 | ternary('', inv_port)
            ] | join('') | quote }} \
      -f {{ item | quote }}
    failed_when: local_keygen.stderr
    changed_when: False

  - name: collect hosts for ssh-keyscan
    when:
    - inv_conn_is_ssh
    - not local_keygen.results
          | reject('skipped')
          | map(attribute='rc')
          | difference([1])
    set_fact:
      ssh_keyscan_args:
        h: "{{ inv_host }}"
        p: "{{ inv_port }}"

  - name: fetch remote ssh fingerprints
    run_once: True
    when: inventory_hostname == ansible_play_hosts[0]
    shell: ssh-keyscan -H -f - -p {{ item.0 | quote }} >> {{ '~/.ssh/known_hosts' | expanduser | quote }}
    args:
      stdin: "{{ item.1 | map(attribute='h') | unique | join('\n') }}"
    loop: "{{ groups.all | map('extract', hostvars, 'ssh_keyscan_args') | select('defined') | groupby('p') }}"
    loop_control:
      label: "hosts with port {{ item.0 }}"

  - name: for new ssh hosts
    when:
    - inv_conn_is_ssh
    - not local_keygen.results
          | reject('skipped')
          | map(attribute='rc')
          | difference([1])
    block:
    - name: fetch remote ssh fingerprints
      when: False
      raw: >-
        ssh-keyscan -H
        -p {{ inv_port | quote }}
        {{ inv_host | quote }}
      register: local_keyscan
      failed_when: local_keyscan.rc or not local_keyscan.stdout
      changed_when: False

    - name: accept new ssh fingerprints
      when: False
      with_items: "{{ local_keyscan.stdout_lines
                      | d([])
                      | map('regex_replace',
                            inv_port_is_22 | ternary('^(.)$', '^([^[ ]*) '),
                            '[\\1]:' + inv_port + ' ')
                      | list }}"
      known_hosts:
        name: >-
          {{ [ inv_port_is_22 | ternary('', '['),
               inv_host,
               inv_port_is_22 | ternary('', ']:'),
               inv_port_is_22 | ternary('', inv_port)
             ] | join('') }}
        key: "{{ item }}"
        state: present
        hash_host: True

    - name: user known_hosts mode is 0600
      run_once: True
      when: "'~/.ssh/known_hosts' | expanduser is exists"
      file:
        path: "{{ '~/.ssh/known_hosts' | expanduser }}"
        owner: "{{ lookup('id', 'euname') }}"
        mode: 'u=rw,g=,o='
